package Stategy;

import static org.mockito.Mockito.mock;

import java.io.File;
import java.io.IOException;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.mockito.Mockito;

import Client.Client;
import Serveur.FtpFtpRequest;
import Strategy.FtpRequestMKD;
import Strategy.RequestMKD;

public class FtpRequestMKDTest {

	@Rule
	public TemporaryFolder tmpFolder = new TemporaryFolder();

	@Test
	public void testOK() throws IOException {
		File folder = tmpFolder.newFolder("dossier");

		FtpRequest ftp = mock(FtpRequest.class);
		String [] request = {"MKD", "/dossier2"};
		Client c = mock(Client.class);
		Mockito.when(ftp.getClient()).thenReturn(c);
		
		Mockito.when(ftp.getServerPath()).thenReturn(folder.getAbsolutePath());

		RequestMKD mkd = new RequestMKD();
		mkd.doFtpRequest(ftp, request);

		Mockito.verify(ftp).sendMessage("257 MKD command successfull");
	}
	
	@Test
	public void testAlreadyExists() throws IOException {
		File tempFolder = tmpFolder.newFolder("folder");
		(new File(tempFolder.getAbsolutePath() + "/test")).mkdirs();

		String [] request = {"MKD", "/test"};
		FtpRequest ftp = mock(FtpRequest.class);

		Mockito.when(ftp.getServerPath()).thenReturn(tempFolder.getAbsolutePath());

		RequestMKD mkd = new RequestMKD();
		mkd.doRequest(ftp, request);

		Mockito.verify(session).sendCommand("553 Directory already exists");
	}
	
	@Test
	public void testNoRights() throws IOException {
		File tempFolder = testFolder.newFolder("folder");
		tempFolder.setExecutable(false);

		Session session = mock(Session.class);
		FtpRequest req = mock(FtpRequest.class);

		Mockito.when(req.getSession()).thenReturn(session);
		Mockito.when(req.getArgument()).thenReturn("/test");
		Mockito.when(session.getServerPath()).thenReturn(tempFolder.getAbsolutePath());

		MKD mkd = new MKD();
		mkd.execute(req);

		Mockito.verify(session).sendCommand("550 Unable to make directory");
	}
}
