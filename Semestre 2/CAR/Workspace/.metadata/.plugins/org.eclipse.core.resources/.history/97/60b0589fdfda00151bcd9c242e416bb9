package Strategy;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;

import Client.Client;
import Exceptions.RequestException;
import Exceptions.RequestRETRException;
import Serveur.FtpRequest;

public class RequestRETR implements Request{

	public void doRequest(FtpRequest ftp, String[] request)
			throws RequestException {
		/* Test si le client est connecté */
		Client c = ftp.getClient();
		if(c == null){
			ftp.getWriter().println("Veuillez vous connecter.");
			return;
		}else{
			if(!c.isConnected()){
				ftp.getWriter().println("Veuillez vous connecter.");
				return;
			}
		}
		/* Test les droits du client */
		if(!ftp.getClient().canRead()){
			ftp.getWriter().println(550 + " pas de droit de lecture.");
    		return;
		}
		
		ftp.getWriter().println(150 + " Files OK, open Data Connection in ASCII"); 
		try {

			if(ftp.getPassive())
				ftp.setDataSocket(ftp.getPassiveServer().accept());
			else
				ftp.setDataSocket(new Socket(InetAddress.getByName(ftp.getAdress()), ftp.getPort()));
			
			ftp.setDataReader(new DataInputStream(ftp.getDataSocket().getInputStream()));
			ftp.setDataWriter(new DataOutputStream(ftp.getDataSocket().getOutputStream()));
			FileInputStream fis;
			int i;

			//on envoie le fichier
			fis = new FileInputStream( ftp.getPathname() + "/" + request[1] );
			while( (i = fis.read()) != -1){
				ftp.getDataWriter().writeByte(i);
			}

			//on ferme le fichier
			fis.close();

			//on ferme le socket de donnŽes
			ftp.getDataSocket().close();
			ftp.getWriter().println(226 + " Closing data connection. Requested file action successful");
		} catch (IOException e) {
			ftp.getWriter().println(425 + " Can't open data connection.");
    		throw new RequestRETRException(ftp);
		}
	}

	

}
