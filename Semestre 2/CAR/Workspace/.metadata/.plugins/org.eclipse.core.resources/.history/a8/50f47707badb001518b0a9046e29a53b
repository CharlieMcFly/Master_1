package Stategy;

import static org.mockito.Mockito.mock;

import org.junit.Test;
import org.mockito.Mockito;

import Exceptions.RequestException;
import Serveur.FtpRequest;
import Strategy.Request;
import Strategy.RequestUSER;

public class RequestUSERTest {

	@Test
	public void USEROk() {
		FtpRequest ftp = mock(FtpRequest.class);
		
		String [] request = {"USER", "a" };
		
		Mockito.when(ftp.contientClientUsername("a")).thenReturn(true);
		
		RequestUSER u = new RequestUSER();

		try {
			u.doRequest(ftp, request);
		} catch (RequestException e) {
			e.printStackTrace();
		}
		
		Mockito.verify(ftp).sendMessage("331 User name okay, need password");
		
	}
	
	@Test
	public void USERNotOk() {
		Session session = mock(Session.class);
		Request req = mock(Request.class);
		
		USER u = new USER();		
		Mockito.when(req.getSession()).thenReturn(session);
		Mockito.when(req.getArgument()).thenReturn("test");
		Mockito.when(session.setUser("test")).thenReturn(false);
		

		u.execute(req);
		
		Mockito.verify(session).sendCommand("430 Invalid username");
		
	}

}
